name: C/C++ CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs: 
  build:

    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          # - { name: "Windows MSVC", os: windows-latest, cc: "cl", cxx: "cl" }
          # - { name: "Ubuntu gcc", os: ubuntu-latest, cc: "gcc", cxx: "g++", release_name: "cppl-linux-x86_64" }
          - { name: "MacOS", os: macos-10.15, cc: "clang", cxx: "clang++", release_name: "cppl-darwin-x86_64" }
            
    steps:
    - uses: actions/checkout@v2
    - name: Setup Ninja
      uses: ashutoshvarma/setup-ninja@master
      with:
        # ninja version to download. Default: 1.10.0
        version: 1.10.0

    - name: macos.phase-1.cmake
      if: matrix.config.os == 'macos-10.15'
      run: |
        cmake -DCMAKE_BUILD_TYPE=Release \
              -DCMAKE_INSTALL_PREFIX=${{ runner.workspace }}/phase1 \
              -DLLVM_ENABLE_PROJECTS="cxx;cxxabi;clang;lld" \
              -G "Ninja" ${{ runner.workspace }}/cppl/llvm

    - name: macos.phase-1.build-clang
      if: matrix.config.os == 'macos-10.15'
      run: ninja -j4 clang

    - name: macos.phase-1.build-lld
      if: matrix.config.os == 'macos-10.15'
      run: ninja -j4 lld

    - name: macos.phase-1.build-rest
      if: matrix.config.os == 'macos-10.15'
      run: ninja -j4

    - name: macos.phase-1.install
      if: matrix.config.os == 'macos-10.15'
      run: ninja -j4 install

    - name: macos.phase-final.cmake
      if: matrix.config.os == 'macos-10.15'
      run: |
        cmake -DCMAKE_BUILD_TYPE=Release \
              -DCMAKE_INSTALL_PREFIX=${{ runner.workspace }}/${{ matrix.config.release_name }} \
              -DCMAKE_C_COMPILER=${{ runner.workspace }}/phase1/bin/clang \
              -DCMAKE_CXX_COMPILER=${{ runner.workspace }}/phase1/bin/clang++ \
              -DLLVM_ENABLE_LLD=ON \ 
              -DLLVM_INCLUDE_GO_TESTS=OFF \
              -DLLVM_ENABLE_PROJECTS="cxx;cxxabi;clang" \
              -G "Ninja" ${{ runner.workspace }}/cppl/llvm

    - name: macos.phase-final.build-clang
      if: matrix.config.os == 'macos-10.15'
      run: ninja -j4 clang

    - name: macos.phase-final.build-rest
      if: matrix.config.os == 'macos-10.15'
      run: ninja -j4

    - name: macos.phase-final.install
      if: matrix.config.os == 'macos-10.15'
      run: ninja -j4 install

    - name: Archive 
      if: matrix.config.os == 'macos-10.15'
      run: |
        tar pczf \
            ${{ runner.workspace }}/${{ matrix.config.release_name }}.tgz \
            -C ${{ runner.workspace }} ${{ matrix.config.release_name }}

    - name: Upload a Build Artifact
      if: matrix.config.os == 'macos-10.15'
      uses: actions/upload-artifact@v2
      with:
        # Artifact name
        name: ${{ matrix.config.release_name }}
        # A file, directory or wildcard pattern that describes what to upload
        path: ${{ runner.workspace }}/${{ matrix.config.release_name }}.tgz
    - name: Check
      if: matrix.config.os == 'macos-10.15'
      run: ninja -j4 check-all
