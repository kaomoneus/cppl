// RUN:  %clang -cc1 -std=c++17 -xc++ -levitation-build-preamble -levitation-decl-ast-meta=%T/preamble.meta %S/Inputs/Preamble.h -o %T/preamble.pch

// RUN:  %clang -cc1 -std=c++17 -levitation-preamble=%T/preamble.pch \
// RUN:    -xc++ -levitation-decl-ast-meta=%T/A.decl-ast-meta \
// RUN:    -flevitation-build-decl %S/Inputs/A.cppl -emit-pch -o %T/A.decl-ast \
// RUN:    -levitation-unit-id=Inputs::A \
// RUN:    -flevitation-ast-print | FileCheck %S/Inputs/Preamble.h

// RUN:  %clang -cc1 -std=c++17 -levitation-preamble=%T/preamble.pch \
// RUN:    -xc++ -levitation-decl-ast-meta=%T/A.decl-ast-meta \
// RUN:    -levitation-unit-id=Inputs::A \
// RUN:    -flevitation-build-decl %S/Inputs/A.cppl -emit-pch -o %T/A.decl-ast

// RUN:  %clang -cc1 -std=c++17 -levitation-preamble=%T/preamble.pch \
// RUN:    -xc++ -levitation-decl-ast-meta=%T/A.decl-ast-meta \
// RUN:    -levitation-unit-id=main \
// RUN:    -flevitation-build-decl -levitation-dependency=%T/A.decl-ast \
// RUN:    %S/main.cppl -o %T/A.decl-ast -flevitation-ast-print \
// RUN:    | FileCheck %S/Inputs/A.cppl

#import Inputs::A

namespace :: {

const int const_int = 9999;

int main() {
  return 0;
}

}
