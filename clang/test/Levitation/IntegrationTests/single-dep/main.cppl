// This is a generated file. Don't edit it.
// Edit main.cppl.in and use bash.sh or test-all.sh
// to generate it again.
// ------------------------------------------------

// RUN:  %clang -cc1 -std=c++17 -xc++ -levitation-build-preamble -levitation-decl-ast-meta=preamble.meta %S/../preamble.hpp -o %T/preamble.pch
// Parsing #import directives in 'Inputs/A'...
// RUN:  %clang -cc1 -std=c++17 -levitation-preamble=%T/preamble.pch -xc++ -levitation-parse-import -levitation-sources-root-dir=%S -levitation-deps-output-file=%T/Inputs_A.ldeps %S/Inputs/A.cppl
// Building declaration 'Inputs/A'...
// RUN:  %clang -cc1 -std=c++17 -levitation-preamble=%T/preamble.pch -xc++ -flevitation-build-decl -emit-pch %S/Inputs/A.cppl -levitation-decl-ast-meta=%T/Inputs_A.decl-ast-meta -o %T/Inputs_A.decl-ast
// Building object 'Inputs/A'...
// RUN:  %clang -cc1 -std=c++17 -levitation-preamble=%T/preamble.pch -xc++ -flevitation-build-object -emit-obj %S/Inputs/A.cppl -levitation-decl-ast-meta=%T/Inputs_A.decl-ast-meta -o %T/Inputs_A.o
// Building object 'main'...
// RUN:  %clang -cc1 -std=c++17 -levitation-preamble=%T/preamble.pch -xc++ -flevitation-build-object -levitation-dependency=%T/Inputs_A.decl-ast -emit-obj %S/main.cppl -levitation-decl-ast-meta=%T/Inputs_A.decl-ast-meta -o %T/main.o
// RUN:  %clangxx %T/main.o %T/Inputs_A.o -o %T/app.out
// RUN:  %T/app.out
#import Inputs::A

int main() {
  with (
    auto TestScope = levitation::Test::context()
        .expect(787)
    .open()
  ) {
    levitation::Test::context()
        << Inputs::A::foo();
  }
  return levitation::Test::result();
}
